Version 0.4.0:
==============
Architecture Design for Particle Filter:

Input:
1- Number of Particles
2- Feature Name + Similarity Measure + Gaussian Variance
3- Occlusion Flag Threshold

Particle Filter:
1- Initialize
	1-1- Initialize First Bounding Box
    1-2- Initialize Parameters
    1-3- Initialize Particles
    1-4- Initialize Target Model (Calculate Features Based on RGB + Depth + Init BB)
2- Particle Filter Train
3- Particle Filter Test Loop
    3-1- Calculate Features 
    3-2- Measure Particle Features to Target
    3-3- Calculate Particle Likelihood Based on Feature
    3-4- Normalize Features Between All Particles
    3-5- Calculate Particle Likelihood via Log-Sum-Exp
    3-6- Normalize Particle Likelihood to Make Probability
    3-7- Apply Occlusion Flag
    3-8- Update Target Model
    3-9- Resampling




Version 0.3.0:
==============
1- Naive trackers (lower bound and upper bound trackers)

VERSION 0.2.0:
==============
1- General Framework Planning:

* General Settings
* Training
*** For Each Video Do
****** Read Video General Info
****** Initialize Trackers for Training Mode
****** For Each Frame of Video Do
********* For Each Tracker Do
************ Provide Tracker with Input Data and Ground Truth
****** Returning & Saving the Trained Parameters of Tracker / If No Video is Provided Load Default Values
* Testing
*** For Each Video Do
****** Read Video General Info
****** Initialize Trackers for Testing Mode: with Trained Parameters, Hand Tuned Parameters (Same Algorithm with Different Set of Parameters),
****** For Each Frame of Video Do
********* For Each Tracker Do
************ Provide Tracker with Input Data
************ Save the Result of Tracking
*** Returning The Result for Each Video
* Evaluations
*** For Each Video Do
****** For Each Tracker Do
********* Calculate the Evaluation Metrics
****** Draw Result Table
* Output Generation
*** Save Overall Tracking Video
*** Save Tracker Result Files

VERSION 0.1.0:
==============
1- Read data from Princeton dataset

